"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDefaultCompilerOptions = exports.TYPESCRIPT_BLACKLISTED_OPTIONS = exports.TYPESCRIPT_COMPILER_NON_OVERRIDABLE_OPTIONS = exports.DEFAULT_TYPESCRIPT_COMPILER_OPTIONS = exports.DEFAULT_SCREENSHOT_THUMBNAILS = exports.DEFAULT_PROXYLESS = exports.DEFAULT_DISABLE_HTTP2 = exports.DEFAULT_RETRY_TEST_PAGES = exports.DEFAULT_DEVELOPMENT_MODE = exports.DEFAULT_SOURCE_DIRECTORIES = exports.DEFAULT_CONCURRENCY_VALUE = exports.DEFAULT_APP_INIT_DELAY = exports.DEFAULT_SPEED_VALUE = exports.DEFAULT_TIMEOUT = void 0;
const customizable_compilers_1 = __importDefault(require("./customizable-compilers"));
exports.DEFAULT_TIMEOUT = {
    selector: 10000,
    assertion: 3000,
    pageLoad: 3000,
};
exports.DEFAULT_SPEED_VALUE = 1;
exports.DEFAULT_APP_INIT_DELAY = 1000;
exports.DEFAULT_CONCURRENCY_VALUE = 1;
exports.DEFAULT_SOURCE_DIRECTORIES = ['tests', 'test'];
exports.DEFAULT_DEVELOPMENT_MODE = false;
exports.DEFAULT_RETRY_TEST_PAGES = false;
exports.DEFAULT_DISABLE_HTTP2 = false;
exports.DEFAULT_PROXYLESS = false;
exports.DEFAULT_SCREENSHOT_THUMBNAILS = true;
exports.DEFAULT_TYPESCRIPT_COMPILER_OPTIONS = {
    experimentalDecorators: true,
    emitDecoratorMetadata: true,
    allowJs: true,
    pretty: true,
    inlineSourceMap: true,
    noImplicitAny: false,
    module: 1 /* ts.ModuleKind.CommonJS */,
    moduleResolution: 2 /* ts.ModuleResolutionKind.Node */,
    target: 3 /* ts.ScriptTarget.ES2016 */,
    jsx: 2 /* ts.JsxEmit.React */,
    suppressOutputPathCheck: true,
    skipLibCheck: true,
};
exports.TYPESCRIPT_COMPILER_NON_OVERRIDABLE_OPTIONS = ['module', 'moduleResolution', 'target'];
exports.TYPESCRIPT_BLACKLISTED_OPTIONS = [
    'incremental',
    'tsBuildInfoFile',
    'emitDeclarationOnly',
    'declarationMap',
    'declarationDir',
    'composite',
    'outFile',
    'out',
];
const DEFAULT_COMPILER_OPTIONS = {
    [customizable_compilers_1.default.typescript]: {},
};
function getDefaultCompilerOptions() {
    // NOTE: Return the copy of the constant to prevent the modification of object properties
    return Object.assign({}, DEFAULT_COMPILER_OPTIONS);
}
exports.getDefaultCompilerOptions = getDefaultCompilerOptions;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC12YWx1ZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29uZmlndXJhdGlvbi9kZWZhdWx0LXZhbHVlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxzRkFBNkQ7QUFFaEQsUUFBQSxlQUFlLEdBQUc7SUFDM0IsUUFBUSxFQUFHLEtBQUs7SUFDaEIsU0FBUyxFQUFFLElBQUk7SUFDZixRQUFRLEVBQUcsSUFBSTtDQUNsQixDQUFDO0FBRVcsUUFBQSxtQkFBbUIsR0FBRyxDQUFDLENBQUM7QUFFeEIsUUFBQSxzQkFBc0IsR0FBRyxJQUFJLENBQUM7QUFFOUIsUUFBQSx5QkFBeUIsR0FBRyxDQUFDLENBQUM7QUFFOUIsUUFBQSwwQkFBMEIsR0FBRyxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQztBQUUvQyxRQUFBLHdCQUF3QixHQUFRLEtBQUssQ0FBQztBQUN0QyxRQUFBLHdCQUF3QixHQUFRLEtBQUssQ0FBQztBQUN0QyxRQUFBLHFCQUFxQixHQUFXLEtBQUssQ0FBQztBQUN0QyxRQUFBLGlCQUFpQixHQUFlLEtBQUssQ0FBQztBQUN0QyxRQUFBLDZCQUE2QixHQUFHLElBQUksQ0FBQztBQUVyQyxRQUFBLG1DQUFtQyxHQUFpQztJQUM3RSxzQkFBc0IsRUFBRyxJQUFJO0lBQzdCLHFCQUFxQixFQUFJLElBQUk7SUFDN0IsT0FBTyxFQUFrQixJQUFJO0lBQzdCLE1BQU0sRUFBbUIsSUFBSTtJQUM3QixlQUFlLEVBQVUsSUFBSTtJQUM3QixhQUFhLEVBQVksS0FBSztJQUM5QixNQUFNLEVBQW1CLENBQUMsQ0FBQyw0QkFBNEI7SUFDdkQsZ0JBQWdCLEVBQVMsQ0FBQyxDQUFDLGtDQUFrQztJQUM3RCxNQUFNLEVBQW1CLENBQUMsQ0FBQyw0QkFBNEI7SUFDdkQsR0FBRyxFQUFzQixDQUFDLENBQUMsc0JBQXNCO0lBQ2pELHVCQUF1QixFQUFFLElBQUk7SUFDN0IsWUFBWSxFQUFhLElBQUk7Q0FDaEMsQ0FBQztBQUVXLFFBQUEsMkNBQTJDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsa0JBQWtCLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFFdkYsUUFBQSw4QkFBOEIsR0FBRztJQUMxQyxhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLFdBQVc7SUFDWCxTQUFTO0lBQ1QsS0FBSztDQUNSLENBQUM7QUFFRixNQUFNLHdCQUF3QixHQUFHO0lBQzdCLENBQUMsZ0NBQXFCLENBQUMsVUFBVSxDQUFDLEVBQUUsRUFBRTtDQUN6QyxDQUFDO0FBRUYsU0FBZ0IseUJBQXlCO0lBQ3JDLHlGQUF5RjtJQUN6RixPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLHdCQUF3QixDQUFDLENBQUM7QUFDdkQsQ0FBQztBQUhELDhEQUdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGljdGlvbmFyeSB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgQ3VzdG9taXphYmxlQ29tcGlsZXJzIGZyb20gJy4vY3VzdG9taXphYmxlLWNvbXBpbGVycyc7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1RJTUVPVVQgPSB7XG4gICAgc2VsZWN0b3I6ICAxMDAwMCxcbiAgICBhc3NlcnRpb246IDMwMDAsXG4gICAgcGFnZUxvYWQ6ICAzMDAwLFxufTtcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfU1BFRURfVkFMVUUgPSAxO1xuXG5leHBvcnQgY29uc3QgREVGQVVMVF9BUFBfSU5JVF9ERUxBWSA9IDEwMDA7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX0NPTkNVUlJFTkNZX1ZBTFVFID0gMTtcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfU09VUkNFX0RJUkVDVE9SSUVTID0gWyd0ZXN0cycsICd0ZXN0J107XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX0RFVkVMT1BNRU5UX01PREUgICAgICA9IGZhbHNlO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfUkVUUllfVEVTVF9QQUdFUyAgICAgID0gZmFsc2U7XG5leHBvcnQgY29uc3QgREVGQVVMVF9ESVNBQkxFX0hUVFAyICAgICAgICAgPSBmYWxzZTtcbmV4cG9ydCBjb25zdCBERUZBVUxUX1BST1hZTEVTUyAgICAgICAgICAgICA9IGZhbHNlO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfU0NSRUVOU0hPVF9USFVNQk5BSUxTID0gdHJ1ZTtcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfVFlQRVNDUklQVF9DT01QSUxFUl9PUFRJT05TOiBEaWN0aW9uYXJ5PGJvb2xlYW4gfCBudW1iZXI+ID0ge1xuICAgIGV4cGVyaW1lbnRhbERlY29yYXRvcnM6ICB0cnVlLFxuICAgIGVtaXREZWNvcmF0b3JNZXRhZGF0YTogICB0cnVlLFxuICAgIGFsbG93SnM6ICAgICAgICAgICAgICAgICB0cnVlLFxuICAgIHByZXR0eTogICAgICAgICAgICAgICAgICB0cnVlLFxuICAgIGlubGluZVNvdXJjZU1hcDogICAgICAgICB0cnVlLFxuICAgIG5vSW1wbGljaXRBbnk6ICAgICAgICAgICBmYWxzZSxcbiAgICBtb2R1bGU6ICAgICAgICAgICAgICAgICAgMSAvKiB0cy5Nb2R1bGVLaW5kLkNvbW1vbkpTICovLFxuICAgIG1vZHVsZVJlc29sdXRpb246ICAgICAgICAyIC8qIHRzLk1vZHVsZVJlc29sdXRpb25LaW5kLk5vZGUgKi8sXG4gICAgdGFyZ2V0OiAgICAgICAgICAgICAgICAgIDMgLyogdHMuU2NyaXB0VGFyZ2V0LkVTMjAxNiAqLyxcbiAgICBqc3g6ICAgICAgICAgICAgICAgICAgICAgMiAvKiB0cy5Kc3hFbWl0LlJlYWN0ICovLFxuICAgIHN1cHByZXNzT3V0cHV0UGF0aENoZWNrOiB0cnVlLFxuICAgIHNraXBMaWJDaGVjazogICAgICAgICAgICB0cnVlLFxufTtcblxuZXhwb3J0IGNvbnN0IFRZUEVTQ1JJUFRfQ09NUElMRVJfTk9OX09WRVJSSURBQkxFX09QVElPTlMgPSBbJ21vZHVsZScsICdtb2R1bGVSZXNvbHV0aW9uJywgJ3RhcmdldCddO1xuXG5leHBvcnQgY29uc3QgVFlQRVNDUklQVF9CTEFDS0xJU1RFRF9PUFRJT05TID0gW1xuICAgICdpbmNyZW1lbnRhbCcsXG4gICAgJ3RzQnVpbGRJbmZvRmlsZScsXG4gICAgJ2VtaXREZWNsYXJhdGlvbk9ubHknLFxuICAgICdkZWNsYXJhdGlvbk1hcCcsXG4gICAgJ2RlY2xhcmF0aW9uRGlyJyxcbiAgICAnY29tcG9zaXRlJyxcbiAgICAnb3V0RmlsZScsXG4gICAgJ291dCcsXG5dO1xuXG5jb25zdCBERUZBVUxUX0NPTVBJTEVSX09QVElPTlMgPSB7XG4gICAgW0N1c3RvbWl6YWJsZUNvbXBpbGVycy50eXBlc2NyaXB0XToge30sXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVmYXVsdENvbXBpbGVyT3B0aW9ucyAoKTogb2JqZWN0IHtcbiAgICAvLyBOT1RFOiBSZXR1cm4gdGhlIGNvcHkgb2YgdGhlIGNvbnN0YW50IHRvIHByZXZlbnQgdGhlIG1vZGlmaWNhdGlvbiBvZiBvYmplY3QgcHJvcGVydGllc1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBERUZBVUxUX0NPTVBJTEVSX09QVElPTlMpO1xufVxuIl19