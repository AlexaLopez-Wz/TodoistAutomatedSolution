"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isFixtureFunctionProperty = exports.isTestFunctionProperty = exports.FUNCTION_PROPERTIES = exports.FIXTURE_FUNCTION_PROPERTIES = exports.TEST_FUNCTION_PROPERTIES = exports.BEFORE_AFTER_EACH_PROPERTIES = exports.BEFORE_AFTER_PROPERTIES = void 0;
exports.BEFORE_AFTER_PROPERTIES = ['beforeFn', 'afterFn'];
exports.BEFORE_AFTER_EACH_PROPERTIES = ['beforeEachFn', 'afterEachFn'];
exports.TEST_FUNCTION_PROPERTIES = ['fn', ...exports.BEFORE_AFTER_PROPERTIES];
exports.FIXTURE_FUNCTION_PROPERTIES = [...exports.BEFORE_AFTER_PROPERTIES, ...exports.BEFORE_AFTER_EACH_PROPERTIES];
exports.FUNCTION_PROPERTIES = [...exports.TEST_FUNCTION_PROPERTIES, ...exports.BEFORE_AFTER_EACH_PROPERTIES];
function isTestFunctionProperty(value) {
    return exports.TEST_FUNCTION_PROPERTIES.includes(value);
}
exports.isTestFunctionProperty = isTestFunctionProperty;
function isFixtureFunctionProperty(value) {
    return exports.FIXTURE_FUNCTION_PROPERTIES.includes(value);
}
exports.isFixtureFunctionProperty = isFixtureFunctionProperty;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdG9jb2wuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2VydmljZXMvY29tcGlsZXIvcHJvdG9jb2wudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBNkJhLFFBQUEsdUJBQXVCLEdBQVEsQ0FBQyxVQUFVLEVBQUUsU0FBUyxDQUFVLENBQUM7QUFDaEUsUUFBQSw0QkFBNEIsR0FBRyxDQUFDLGNBQWMsRUFBRSxhQUFhLENBQVUsQ0FBQztBQUN4RSxRQUFBLHdCQUF3QixHQUFPLENBQUMsSUFBSSxFQUFFLEdBQUcsK0JBQXVCLENBQVUsQ0FBQztBQUMzRSxRQUFBLDJCQUEyQixHQUFJLENBQUMsR0FBRywrQkFBdUIsRUFBRSxHQUFHLG9DQUE0QixDQUFVLENBQUM7QUFDdEcsUUFBQSxtQkFBbUIsR0FBWSxDQUFDLEdBQUcsZ0NBQXdCLEVBQUUsR0FBRyxvQ0FBNEIsQ0FBVSxDQUFDO0FBT3BILFNBQWdCLHNCQUFzQixDQUFFLEtBQXlCO0lBQzdELE9BQU8sZ0NBQXdCLENBQUMsUUFBUSxDQUFDLEtBQStCLENBQUMsQ0FBQztBQUM5RSxDQUFDO0FBRkQsd0RBRUM7QUFFRCxTQUFnQix5QkFBeUIsQ0FBRSxLQUF5QjtJQUNoRSxPQUFPLG1DQUEyQixDQUFDLFFBQVEsQ0FBQyxLQUFrQyxDQUFDLENBQUM7QUFDcEYsQ0FBQztBQUZELDhEQUVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcGlsZXJBcmd1bWVudHMgfSBmcm9tICcuLi8uLi9jb21waWxlci9pbnRlcmZhY2VzJztcbmltcG9ydCB7IEluY29taW5nTWVzc2FnZUxpa2VJbml0T3B0aW9ucyB9IGZyb20gJ3Rlc3RjYWZlLWhhbW1lcmhlYWQnO1xuaW1wb3J0IFJvbGUgZnJvbSAnLi4vLi4vcm9sZS9yb2xlJztcblxuaW1wb3J0IHtcbiAgICBBZGRSZXF1ZXN0RXZlbnRMaXN0ZW5lcnNBcmd1bWVudHMsXG4gICAgRXhlY3V0ZUNvbW1hbmRBcmd1bWVudHMsXG4gICAgRXhlY3V0ZU1vY2tQcmVkaWNhdGUsXG4gICAgRXhlY3V0ZVJlcXVlc3RGaWx0ZXJSdWxlUHJlZGljYXRlQXJndW1lbnRzLFxuICAgIEV4ZWN1dGVSb2xlSW5pdEZuQXJndW1lbnRzLFxuICAgIEluaXRpYWxpemVUZXN0UnVuRGF0YUFyZ3VtZW50cyxcbiAgICBSZW1vdmVIZWFkZXJPbkNvbmZpZ3VyZVJlc3BvbnNlRXZlbnRBcmd1bWVudHMsXG4gICAgUmVtb3ZlUmVxdWVzdEV2ZW50TGlzdGVuZXJzQXJndW1lbnRzLFxuICAgIFJlcXVlc3RIb29rRXZlbnRBcmd1bWVudHMsXG4gICAgU2V0Q29uZmlndXJlUmVzcG9uc2VFdmVudE9wdGlvbnNBcmd1bWVudHMsXG4gICAgU2V0Q3R4QXJndW1lbnRzLFxuICAgIFNldEhlYWRlck9uQ29uZmlndXJlUmVzcG9uc2VFdmVudEFyZ3VtZW50cyxcbiAgICBTZXRNb2NrQXJndW1lbnRzLFxuICAgIFNldE9wdGlvbnNBcmd1bWVudHMsXG4gICAgVGVzdFJ1bkxvY2F0b3IsXG4gICAgVXBkYXRlUm9sZVByb3BlcnR5QXJndW1lbnRzLFxuICAgIEV4ZWN1dGVKc0V4cHJlc3Npb25Bcmd1bWVudHMsXG4gICAgRXhlY3V0ZUFzeW5jSnNFeHByZXNzaW9uQXJndW1lbnRzLFxuICAgIENvbW1hbmRMb2NhdG9yLFxuICAgIEFkZFVuZXhwZWN0ZWRFcnJvckFyZ3VtZW50cyxcbiAgICBDaGVja1dpbmRvd0FyZ3VtZW50LFxuICAgIFJlbW92ZUZpeHR1cmVDdHhBcmd1bWVudHMsXG59IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5cbmV4cG9ydCBjb25zdCBCRUZPUkVfQUZURVJfUFJPUEVSVElFUyAgICAgID0gWydiZWZvcmVGbicsICdhZnRlckZuJ10gYXMgY29uc3Q7XG5leHBvcnQgY29uc3QgQkVGT1JFX0FGVEVSX0VBQ0hfUFJPUEVSVElFUyA9IFsnYmVmb3JlRWFjaEZuJywgJ2FmdGVyRWFjaEZuJ10gYXMgY29uc3Q7XG5leHBvcnQgY29uc3QgVEVTVF9GVU5DVElPTl9QUk9QRVJUSUVTICAgICA9IFsnZm4nLCAuLi5CRUZPUkVfQUZURVJfUFJPUEVSVElFU10gYXMgY29uc3Q7XG5leHBvcnQgY29uc3QgRklYVFVSRV9GVU5DVElPTl9QUk9QRVJUSUVTICA9IFsuLi5CRUZPUkVfQUZURVJfUFJPUEVSVElFUywgLi4uQkVGT1JFX0FGVEVSX0VBQ0hfUFJPUEVSVElFU10gYXMgY29uc3Q7XG5leHBvcnQgY29uc3QgRlVOQ1RJT05fUFJPUEVSVElFUyAgICAgICAgICA9IFsuLi5URVNUX0ZVTkNUSU9OX1BST1BFUlRJRVMsIC4uLkJFRk9SRV9BRlRFUl9FQUNIX1BST1BFUlRJRVNdIGFzIGNvbnN0O1xuXG5leHBvcnQgdHlwZSBGdW5jdGlvblByb3BlcnRpZXMgPSB0eXBlb2YgRlVOQ1RJT05fUFJPUEVSVElFU1tudW1iZXJdO1xuZXhwb3J0IHR5cGUgVGVzdEZ1bmN0aW9uUHJvcGVydGllcyA9IHR5cGVvZiBURVNUX0ZVTkNUSU9OX1BST1BFUlRJRVNbbnVtYmVyXTtcbmV4cG9ydCB0eXBlIEZpeHR1cmVGdW5jdGlvblByb3BlcnRpZXMgPSB0eXBlb2YgRklYVFVSRV9GVU5DVElPTl9QUk9QRVJUSUVTW251bWJlcl07XG5cblxuZXhwb3J0IGZ1bmN0aW9uIGlzVGVzdEZ1bmN0aW9uUHJvcGVydHkgKHZhbHVlOiBGdW5jdGlvblByb3BlcnRpZXMpOiB2YWx1ZSBpcyBUZXN0RnVuY3Rpb25Qcm9wZXJ0aWVzIHtcbiAgICByZXR1cm4gVEVTVF9GVU5DVElPTl9QUk9QRVJUSUVTLmluY2x1ZGVzKHZhbHVlIGFzIFRlc3RGdW5jdGlvblByb3BlcnRpZXMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNGaXh0dXJlRnVuY3Rpb25Qcm9wZXJ0eSAodmFsdWU6IEZ1bmN0aW9uUHJvcGVydGllcyk6IHZhbHVlIGlzIEZpeHR1cmVGdW5jdGlvblByb3BlcnRpZXMge1xuICAgIHJldHVybiBGSVhUVVJFX0ZVTkNUSU9OX1BST1BFUlRJRVMuaW5jbHVkZXModmFsdWUgYXMgRml4dHVyZUZ1bmN0aW9uUHJvcGVydGllcyk7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUnVuVGVzdEFyZ3VtZW50cyBleHRlbmRzIFRlc3RSdW5Mb2NhdG9yIHtcbiAgICBpZDogc3RyaW5nO1xuICAgIGZ1bmN0aW9uTmFtZTogRnVuY3Rpb25Qcm9wZXJ0aWVzO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRlc3RSdW5EaXNwYXRjaGVyUHJvdG9jb2wge1xuICAgIGV4ZWN1dGVDb21tYW5kU3luYyAoeyBpZCwgY29tbWFuZCwgY2FsbHNpdGUgfTogRXhlY3V0ZUNvbW1hbmRBcmd1bWVudHMpOiB1bmtub3duO1xuICAgIGV4ZWN1dGVDb21tYW5kICh7IGlkLCBjb21tYW5kLCBjYWxsc2l0ZSB9OiBFeGVjdXRlQ29tbWFuZEFyZ3VtZW50cyk6IFByb21pc2U8dW5rbm93bj47XG4gICAgYWRkUmVxdWVzdEV2ZW50TGlzdGVuZXJzICggeyBob29rSWQsIGhvb2tDbGFzc05hbWUsIHJ1bGVzIH06IEFkZFJlcXVlc3RFdmVudExpc3RlbmVyc0FyZ3VtZW50cyk6IFByb21pc2U8dm9pZD47XG4gICAgcmVtb3ZlUmVxdWVzdEV2ZW50TGlzdGVuZXJzICh7IHJ1bGVzIH06IFJlbW92ZVJlcXVlc3RFdmVudExpc3RlbmVyc0FyZ3VtZW50cyk6IFByb21pc2U8dm9pZD47XG4gICAgZ2V0QXNzZXJ0aW9uQWN0dWFsVmFsdWUgKHsgdGVzdFJ1bklkLCBjb21tYW5kSWQgfTogQ29tbWFuZExvY2F0b3IpOiBQcm9taXNlPHVua25vd24+O1xuICAgIGV4ZWN1dGVSb2xlSW5pdEZuICh7IHRlc3RSdW5JZCwgcm9sZUlkIH06IEV4ZWN1dGVSb2xlSW5pdEZuQXJndW1lbnRzKTogUHJvbWlzZTx1bmtub3duPjtcbiAgICBvblJvbGVBcHBlYXJlZCAocm9sZTogUm9sZSk6IHZvaWQ7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29tcGlsZXJQcm90b2NvbCBleHRlbmRzIFRlc3RSdW5EaXNwYXRjaGVyUHJvdG9jb2wge1xuICAgIHJlYWR5ICgpOiBQcm9taXNlPHZvaWQ+O1xuICAgIGdldFRlc3RzICh7IHNvdXJjZUxpc3QsIGNvbXBpbGVyT3B0aW9ucyB9OiBDb21waWxlckFyZ3VtZW50cyk6IFByb21pc2U8dW5rbm93bj47XG4gICAgcnVuVGVzdEZuICh7IGlkLCBmdW5jdGlvbk5hbWUsIHRlc3RSdW5JZCB9OiBSdW5UZXN0QXJndW1lbnRzKTogUHJvbWlzZTx1bmtub3duPjtcbiAgICBjbGVhblVwICgpOiBQcm9taXNlPHZvaWQ+O1xuICAgIHNldE9wdGlvbnMgKHsgdmFsdWUgfTogU2V0T3B0aW9uc0FyZ3VtZW50cyk6IFByb21pc2U8dm9pZD47XG4gICAgb25SZXF1ZXN0SG9va0V2ZW50ICh7IG5hbWUsIHRlc3RJZCwgaG9va0lkLCBldmVudERhdGEgfTogUmVxdWVzdEhvb2tFdmVudEFyZ3VtZW50cyk6IFByb21pc2U8dm9pZD47XG4gICAgc2V0TW9jayAoeyByZXNwb25zZUV2ZW50SWQsIG1vY2sgfTogU2V0TW9ja0FyZ3VtZW50cyk6IFByb21pc2U8dm9pZD47XG4gICAgc2V0Q29uZmlndXJlUmVzcG9uc2VFdmVudE9wdGlvbnMgKHsgZXZlbnRJZCwgb3B0cyB9OiBTZXRDb25maWd1cmVSZXNwb25zZUV2ZW50T3B0aW9uc0FyZ3VtZW50cyk6IFByb21pc2U8dm9pZD47XG4gICAgc2V0SGVhZGVyT25Db25maWd1cmVSZXNwb25zZUV2ZW50ICh7IGV2ZW50SWQsIGhlYWRlck5hbWUsIGhlYWRlclZhbHVlIH06IFNldEhlYWRlck9uQ29uZmlndXJlUmVzcG9uc2VFdmVudEFyZ3VtZW50cyk6IFByb21pc2U8dm9pZD47XG4gICAgcmVtb3ZlSGVhZGVyT25Db25maWd1cmVSZXNwb25zZUV2ZW50ICh7IGV2ZW50SWQsIGhlYWRlck5hbWUgfTogUmVtb3ZlSGVhZGVyT25Db25maWd1cmVSZXNwb25zZUV2ZW50QXJndW1lbnRzKTogUHJvbWlzZTx2b2lkPjtcbiAgICBleGVjdXRlUmVxdWVzdEZpbHRlclJ1bGVQcmVkaWNhdGUgKHsgdGVzdElkLCBob29rSWQsIHJ1bGVJZCwgcmVxdWVzdEluZm8gfTogRXhlY3V0ZVJlcXVlc3RGaWx0ZXJSdWxlUHJlZGljYXRlQXJndW1lbnRzKTogUHJvbWlzZTxib29sZWFuPjtcbiAgICBleGVjdXRlTW9ja1ByZWRpY2F0ZSAoeyB0ZXN0SWQsIGhvb2tJZCwgcnVsZUlkLCByZXF1ZXN0SW5mbywgcmVzIH06IEV4ZWN1dGVNb2NrUHJlZGljYXRlKTogUHJvbWlzZTxJbmNvbWluZ01lc3NhZ2VMaWtlSW5pdE9wdGlvbnM+O1xuICAgIGdldFdhcm5pbmdNZXNzYWdlcyAoeyB0ZXN0UnVuSWQgfTogVGVzdFJ1bkxvY2F0b3IpOiBQcm9taXNlPHN0cmluZ1tdPjtcbiAgICBpbml0aWFsaXplVGVzdFJ1bkRhdGEgKHsgdGVzdFJ1bklkLCB0ZXN0SWQgfTogSW5pdGlhbGl6ZVRlc3RSdW5EYXRhQXJndW1lbnRzKTogUHJvbWlzZTx2b2lkPjtcbiAgICBnZXRDdHggKHsgdGVzdFJ1bklkIH06IFRlc3RSdW5Mb2NhdG9yKTogUHJvbWlzZTxvYmplY3Q+O1xuICAgIGdldEZpeHR1cmVDdHggKHsgdGVzdFJ1bklkIH06IFRlc3RSdW5Mb2NhdG9yKTogUHJvbWlzZTxvYmplY3Q+O1xuICAgIHNldEN0eCAoeyB0ZXN0UnVuSWQsIHZhbHVlIH06IFNldEN0eEFyZ3VtZW50cyk6IFByb21pc2U8dm9pZD47XG4gICAgc2V0Rml4dHVyZUN0eCAoeyB0ZXN0UnVuSWQsIHZhbHVlIH06IFNldEN0eEFyZ3VtZW50cyk6IFByb21pc2U8dm9pZD47XG4gICAgdXBkYXRlUm9sZVByb3BlcnR5ICh7IHJvbGVJZCwgbmFtZSwgdmFsdWUgfTogVXBkYXRlUm9sZVByb3BlcnR5QXJndW1lbnRzKTogUHJvbWlzZTx2b2lkPjtcbiAgICBleGVjdXRlSnNFeHByZXNzaW9uICh7IGV4cHJlc3Npb24sIHRlc3RSdW5JZCwgb3B0aW9ucyB9OiBFeGVjdXRlSnNFeHByZXNzaW9uQXJndW1lbnRzKTogUHJvbWlzZTx1bmtub3duPjtcbiAgICBleGVjdXRlQXN5bmNKc0V4cHJlc3Npb24gKHsgZXhwcmVzc2lvbiwgdGVzdFJ1bklkLCBjYWxsc2l0ZSB9OiBFeGVjdXRlQXN5bmNKc0V4cHJlc3Npb25Bcmd1bWVudHMpOiBQcm9taXNlPHVua25vd24+O1xuICAgIGV4ZWN1dGVBc3NlcnRpb25GbiAoeyB0ZXN0UnVuSWQsIGNvbW1hbmRJZCB9OiBDb21tYW5kTG9jYXRvcik6IFByb21pc2U8dW5rbm93bj47XG4gICAgYWRkVW5leHBlY3RlZEVycm9yICh7IHR5cGUsIG1lc3NhZ2UgfTogQWRkVW5leHBlY3RlZEVycm9yQXJndW1lbnRzKTogUHJvbWlzZTx2b2lkPjtcbiAgICBjaGVja1dpbmRvdyAoeyB1cmwsIHRpdGxlIH06IENoZWNrV2luZG93QXJndW1lbnQpOiBQcm9taXNlPGJvb2xlYW4+O1xuICAgIHJlbW92ZVRlc3RSdW4oeyB0ZXN0UnVuSWQgfTogVGVzdFJ1bkxvY2F0b3IpOiBQcm9taXNlPHZvaWQ+O1xuICAgIHJlbW92ZUZpeHR1cmVDdHggKHsgZml4dHVyZUlkIH06IFJlbW92ZUZpeHR1cmVDdHhBcmd1bWVudHMpOiBQcm9taXNlPHZvaWQ+O1xufVxuIl19